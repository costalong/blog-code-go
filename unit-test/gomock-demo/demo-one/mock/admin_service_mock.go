// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/costalong/blog-code-go/unit-test/gomock-demo/demo-one (interfaces: AdminSrv)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAdminSrv is a mock of AdminSrv interface.
type MockAdminSrv struct {
	ctrl     *gomock.Controller
	recorder *MockAdminSrvMockRecorder
}

// MockAdminSrvMockRecorder is the mock recorder for MockAdminSrv.
type MockAdminSrvMockRecorder struct {
	mock *MockAdminSrv
}

// NewMockAdminSrv creates a new mock instance.
func NewMockAdminSrv(ctrl *gomock.Controller) *MockAdminSrv {
	mock := &MockAdminSrv{ctrl: ctrl}
	mock.recorder = &MockAdminSrvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdminSrv) EXPECT() *MockAdminSrvMockRecorder {
	return m.recorder
}

// GetAdminInfo mocks base method.
func (m *MockAdminSrv) GetAdminInfo(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdminInfo", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAdminInfo indicates an expected call of GetAdminInfo.
func (mr *MockAdminSrvMockRecorder) GetAdminInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdminInfo", reflect.TypeOf((*MockAdminSrv)(nil).GetAdminInfo), arg0)
}

// GetUserById mocks base method.
func (m *MockAdminSrv) GetUserById(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserById", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserById indicates an expected call of GetUserById.
func (mr *MockAdminSrvMockRecorder) GetUserById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserById", reflect.TypeOf((*MockAdminSrv)(nil).GetUserById), arg0)
}

// Update mocks base method.
func (m *MockAdminSrv) Update(arg0 int, arg1 interface{}) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockAdminSrvMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAdminSrv)(nil).Update), arg0, arg1)
}
